{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/callback","result":{"data":{"markdownRemark":{"id":"2a74aeed-a762-5edb-ada8-acdea89a6c58","html":"<h4 id=\"콜백-함수란-\"><a href=\"#%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98%EB%9E%80-\" aria-label=\"콜백 함수란  permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜백 함수란 ??</h4>\n<p><strong>비동기함수의 처리가 끝난 뒤에, 다음 작업을 진행하기 위해 사용되는 것</strong></p>\n<ul>\n<li>예 ) 데이터를 받아왔어! 받아온 그 데이터를 가지고 alert 으로 표현하고 싶어 !</li>\n</ul>\n<p><strong>어떻게 사용하나요?</strong> : 호출할때 <strong>인자</strong>로 <strong>함수</strong>를 넘겨주는 것. 인자로 들어가는 함수의 값이, 함수 선언된 곳에서의 결과값을 이용해서 실행되게 하는 것.</p>\n<blockquote>\n<h5 id=\"말로-설명하니-더-어렵다\"><a href=\"#%EB%A7%90%EB%A1%9C-%EC%84%A4%EB%AA%85%ED%95%98%EB%8B%88-%EB%8D%94-%EC%96%B4%EB%A0%B5%EB%8B%A4\" aria-label=\"말로 설명하니 더 어렵다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>말로 설명하니 더 어렵다</h5>\n</blockquote>\n<p>일단 차근차근 하나씩 보자. JS 에서 함수는 1급 객체 이다.</p>\n<h5 id=\"1급객체란-무엇이냐-\"><a href=\"#1%EA%B8%89%EA%B0%9D%EC%B2%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%83%90-\" aria-label=\"1급객체란 무엇이냐  permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1급객체란 무엇이냐 ?</h5>\n<ol>\n<li>\n<p>변수 or 데이터 구조 안에 담을 수 있어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let test = function(){\n        console.log(&#39;hi&#39;)\n}</code></pre></div>\n</li>\n<li>\n<p>파라미터로 전달 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//위에서 선언한 test 사용.\nfunction(a, test){\n        console.log(a)\n        test();\n}</code></pre></div>\n</li>\n<li>\n<p>반환값으로 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function func_return(){\n        return function(){\n                console.log(&#39;return 된 함수에서 나왔어요&#39;)\n        }\n}\n//return 값으로 함수를 return 할 수 있다.</code></pre></div>\n</li>\n<li>할당에 삿용된 이름과 관계없이 고유한 구별이 가능하다.</li>\n<li>동적으로 프로퍼티 할당이 가능하다.</li>\n</ol>\n<p>4,5번은 무슨말인지 모르겠다…</p>\n<blockquote>\n<p>콜백 함수의 예제를 보자.</p>\n</blockquote>\n<p>많은 예제를 보았지만 이해가 된 예제를 사용하겠음.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    1 let loading = function(path, done){\n    2         console.log(&#39;전달받은 경로:&#39;, path)\n    3         done(path + &#39;sample.txt&#39;)\n    4   }\n    5\n    6 loading(&#39;/folder/text/&#39;, function(result){\n    7         console.log(&#39;완료!&#39;, result)\n    8   })</code></pre></div>\n<p>이 예제를 하나씩 뜯어보자.</p>\n<ul>\n<li>line 1 : <code class=\"language-text\">loading</code> 이라는 변수에 함수가 들어가 있다. 이 함수는 <code class=\"language-text\">path(&#39;string&#39;)</code>와 <code class=\"language-text\">done(&#39;function&#39;)</code>을 매게변수로 받는다.</li>\n<li>\n<p>line 6 : loading 함수를 호출한다. <code class=\"language-text\">path</code> 에는 ‘/folder/text/’ 가 전달되고, <code class=\"language-text\">done</code> 에는 함수가 전달된다.</p>\n<p><strong>콜백함수는 위에서 흐르는게 아님. 호출되고 어떻게 흘러가는지 봐야됨. 6행에서 실제로 호출됨</strong></p>\n</li>\n</ul>\n<p>여기서 <strong>콜백함수</strong>는 line 6 에 있는 아래의 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">            function(result){\n                    console.log(&#39;완료! :&#39;, result)\n            }\n            //내가 콜백 함수야!</code></pre></div>\n<h4 id=\"흐름을-살펴보자\"><a href=\"#%ED%9D%90%EB%A6%84%EC%9D%84-%EC%82%B4%ED%8E%B4%EB%B3%B4%EC%9E%90\" aria-label=\"흐름을 살펴보자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>흐름을 살펴보자</h4>\n<ol>\n<li>line 6 에서 넘겨준 <code class=\"language-text\">path</code>가 line 2 에서 console 로 출력됨.</li>\n<li>line 3 를 에서는 콜백함수인 <code class=\"language-text\">done</code> 을 호출하며, 기존의 <code class=\"language-text\">path(&#39;/folder/text/&#39;)</code>에 <code class=\"language-text\">&#39;sample.txt&#39;</code>를 이어서 콜백함수의 <code class=\"language-text\">result</code>로 넣어준다.</li>\n<li>넣어준 문자열이(<code class=\"language-text\">result</code>) line 7 에서 console에 찍히게 된다.</li>\n</ol>\n<p>콜백함수는 비동기 <strong>작업후</strong>에 어떻게 하고 싶은지를 만드는것이다.</p>\n<p><strong>다시 코드의 순서를 짚어보자.</strong></p>\n<ol>\n<li><strong>작업을 맡겨두고</strong>(<code class=\"language-text\">loading</code>함수 호출하고, 데이터(<code class=\"language-text\">&#39;/folder/text/&#39;</code>)와 <code class=\"language-text\">콜백함수</code>를 <code class=\"language-text\">loading</code>함수에 전달 )</li>\n<li><strong>loading 함수내에서 작업(<code class=\"language-text\">done</code>)을 처리</strong>(<code class=\"language-text\">path</code> 출력(line 2), <code class=\"language-text\">path + &#39;sample.txt&#39;</code>(line 3) 연결)</li>\n<li>작업을 처리한다는 것은 line 3 에서 <code class=\"language-text\">done(path + &#39;sample.txt&#39;)</code>에서 <code class=\"language-text\">path + &#39;sample.txt&#39;</code> 이것만 처리한다는 것.</li>\n<li>작업이 완료되었을 때(<code class=\"language-text\">path + &#39;sample.txt&#39;</code>해결될 때) 전달받은 콜백함수(<code class=\"language-text\">done</code>) 호출 <code class=\"language-text\">done(path + &#39;sample.txt&#39;)</code></li>\n<li>콜백함수에서(line 6) 에서 결과(<code class=\"language-text\">result</code>)를 받고 line 7 의 <code class=\"language-text\">console</code> 을 찍는다.</li>\n</ol>\n<p>콜백함수에서는 결과를 받고 작업 이후의 기능을 처리합니다</p>\n<p><img src=\"/media/Etc/result.png\"></p>\n<h3 id=\"정리\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h3>\n<ul>\n<li>콜백함수는 비동기 작업의 결과를 받고 이후의 기능을 처리할때 사용한다. (<strong>중요해서 한번더 강조</strong>)</li>\n<li>이 글에서 다루진 않았지만, 콜백함수의 단점으로는 콜백지옥이 있다. (가독성 떨어짐, 유지보수 어려움)</li>\n<li>함수의 흐름 순서를 잘 따져야 한다.</li>\n</ul>\n<h5 id=\"참고자료--httpscodevkrtistorycom52\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C--httpscodevkrtistorycom52\" aria-label=\"참고자료  httpscodevkrtistorycom52 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>참고자료</strong> : <a href=\"https://codevkr.tistory.com/52\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codevkr.tistory.com/52</a></h5>","fields":{"slug":"/posts/callback","tagSlugs":null},"frontmatter":{"date":"2019-12-07T16:03:32.169Z","description":"비동기특집( 콜백함수 )","tags":null,"title":"비동기를 다루고 싶어","socialImage":"/media/jacascript_logo.png"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/callback"}}}